{"version":3,"file":"static/js/422.62a2e652.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderBox>\n      <ThreeDots color=\"#00BFFF\" height={80} width={80} />\n    </LoaderBox>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { theme } from '../../styles';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n\n  margin-bottom: ${theme.spacing(5)};\n  box-shadow: ${theme.shadows.regular};\n  background-color: ${theme.colors.sand};\n\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n    height: 360px;\n  }\n`;\n\nexport const Image = styled.img`\n  height: auto;\n  max-width: 100%;\n\n  @media screen and (min-width: 768px) {\n    height: 100%;\n    max-width: 280px;\n  }\n`;\n\nexport const Description = styled.div`\n  padding: 24px;\n  overflow-y: auto;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n`;\n\nexport const MoreInfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: ${theme.spacing(3)};\n  background-color: ${theme.colors.sand};\n  box-shadow: ${theme.shadows.regular};\n  margin-bottom: ${theme.spacing(5)};\n`;\n\nexport const MoreInfoTitle = styled.h3`\n  font-size: ${theme.fontSizes.medium};\n  margin-bottom: ${theme.spacing(2)};\n`;\nexport const Link = styled(NavLink)`\n  display: inline-flex;\n  flex-direction: column;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-size: ${theme.fontSizes.medium};\n  color: black;\n  font-weight: 500;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &.active {\n    color: white;\n    background-color: ${theme.colors.royalBlue};\n  }\n`;\n\nexport const Message = styled.p`\n  font-size: ${theme.fontSizes.medium};\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport {\n  Description,\n  Genres,\n  Image,\n  Link,\n  MoreInfoBox,\n  MoreInfoTitle,\n  Wrapper,\n  Message,\n} from './MovieDetails.styled';\n\nimport { Loader } from 'components/Loader';\nimport { Outlet } from 'react-router-dom';\nimport imageNotFound from '../../images/image_not_available.jpg';\nimport { getMovieDetails, SRCKEY } from '../../services/API';\n\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBack = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const getInfoAboutMovie = async () => {\n      setIsLoading(true);\n      try {\n        const results = await getMovieDetails(movieId);\n        setMovie(results);\n        setGenres(results.genres);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getInfoAboutMovie();\n  }, [movieId]);\n\n  const { title, vote_average, overview, poster_path } = movie;\n  return (\n    <main>\n      {isLoading && <Loader />}\n\n      {error && (\n        <Message>\n          {'Movie is not available ðŸ˜•. Please, try again later'}\n        </Message>\n      )}\n\n      {!error && (\n        <section>\n          <Link to={goBack}>Go back</Link>\n          <Wrapper>\n            <Image\n              src={poster_path ? `${SRCKEY}${poster_path}` : imageNotFound}\n              alt={title}\n              loading=\"lazy\"\n            />\n\n            <Description>\n              <h1>{title}</h1>\n              <p>User score: {Math.round(vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <Genres>\n                {genres.map(({ name }, index) => (\n                  <li key={index + 1}>{name} </li>\n                ))}\n              </Genres>\n            </Description>\n          </Wrapper>\n\n          <MoreInfoBox>\n            <MoreInfoTitle>Additianal information</MoreInfoTitle>\n            <ul>\n              <Link to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>\n                Cast\n              </Link>\n              <Link to=\"reviews\" state={{ from: location?.state?.from ?? '/' }}>\n                Reviews\n              </Link>\n            </ul>\n          </MoreInfoBox>\n        </section>\n      )}\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n","import axios from 'axios';\nconst KEY = '18ae920eccc30023e44661ce76c3e71c';\nconst SRCKEY = 'https://image.tmdb.org/t/p/w500';\n\nconst getPopularList = async () => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/popular?api_key=${KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nconst getMovieDetails = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getCast = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getReviews = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getFindMovies = async query => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport {\n  SRCKEY,\n  getPopularList,\n  getMovieDetails,\n  getCast,\n  getReviews,\n  getFindMovies,\n};\n"],"names":["LoaderBox","styled","Loader","color","height","width","Wrapper","theme","Image","Description","Genres","MoreInfoBox","MoreInfoTitle","Link","NavLink","Message","MovieDetails","useState","movie","setMovie","genres","setGenres","error","setError","isLoading","setIsLoading","movieId","useParams","location","useLocation","goBack","state","from","useEffect","getInfoAboutMovie","getMovieDetails","results","message","title","vote_average","overview","poster_path","to","src","SRCKEY","imageNotFound","alt","loading","Math","round","map","index","name","Suspense","fallback","KEY","getPopularList","axios","data","id","getCast","getReviews","getFindMovies","query"],"sourceRoot":""}