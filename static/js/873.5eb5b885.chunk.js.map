{"version":3,"file":"static/js/873.5eb5b885.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderBox>\n      <ThreeDots color=\"#00BFFF\" height={80} width={80} />\n    </LoaderBox>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { theme } from '../../styles';\n\nexport const Link = styled(NavLink)`\n  color: black;\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, movieName }) => {\n  const { pathname } = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link\n              to={`${pathname}/${id}`}\n              state={{ from: `${pathname}?name=${movieName}` }}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  movieName: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { theme } from '../../styles';\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  height: 32px;\n  width: 272px;\n  margin-bottom: 12px;\n\n  > input {\n    width: 100%;\n    height: 100%;\n    font-size: ${theme.fontSizes.medium};\n    border-radius: 4px;\n    padding: 0 0 0 8px;\n    border: 2px solid ${theme.colors.dark};\n    transition: border-color ${theme.animation.cubicBezierV1};\n\n    :focus {\n      border: 2px solid ${theme.colors.royalBlue};\n      outline: none;\n    }\n  }\n`;\nexport const Button = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 72px;\n  height: 36px;\n  background-color: ${theme.colors.sand};\n  font-size: 16px;\n  font-weight: 700;\n  text-align: center;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: ${theme.animation.cubicBezierV2};\n\n  :hover {\n    color: ${theme.colors.white};\n    background-color: ${theme.colors.royalBlue};\n  }\n\n  :active {\n    border: none;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Button, Form } from './SearchBar.styled';\n\nexport const SearchBar = ({ query, onChange, onSubmit }) => {\n  return (\n    <div>\n      <Form action=\"\" onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={({ target: { value } }) => onChange(value)}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  query: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { theme } from '../../styles';\n\nexport const Message = styled.p`\n  font-size: ${theme.fontSizes.medium};\n  text-align: center;\n`;\n","import { MoviesList } from 'components/MoviesList';\nimport { SearchBar } from 'components/SearchBar';\nimport { Loader } from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFindMovies } from '../../services/API';\nimport { Message } from 'pages/Movies/Movies.styled';\n\nexport const Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('name') ?? '';\n\n  const handleInputChange = value => setQuery(value);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const name = e.target.query.value;\n\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n    setQuery('');\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    if (movieName === '') return;\n    setIsLoading(true);\n    const getMovies = async () => {\n      try {\n        const { results } = await getFindMovies(movieName);\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies();\n  }, [movieName]);\n\n  return (\n    <main>\n      <SearchBar\n        query={query}\n        onChange={handleInputChange}\n        onSubmit={handleFormSubmit}\n      />\n\n      {isLoading && <Loader />}\n\n      {!isLoading && movieName && movies.length === 0 && (\n        <Message>\n          {\n            'No movies with this title were found ðŸ˜•. Please, enter the correct name of the movie'\n          }\n        </Message>\n      )}\n\n      {!error ? (\n        <MoviesList movies={movies} movieName={movieName} />\n      ) : (\n        <Message>\n          {'Server is not available ðŸ˜•. Please, try again later'}\n        </Message>\n      )}\n    </main>\n  );\n};\n","import axios from 'axios';\nconst KEY = '18ae920eccc30023e44661ce76c3e71c';\nconst SRCKEY = 'https://image.tmdb.org/t/p/w500';\n\nconst getPopularList = async () => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/popular?api_key=${KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nconst getMovieDetails = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getCast = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getReviews = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getFindMovies = async query => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport {\n  SRCKEY,\n  getPopularList,\n  getMovieDetails,\n  getCast,\n  getReviews,\n  getFindMovies,\n};\n"],"names":["LoaderBox","styled","Loader","color","height","width","Link","NavLink","theme","MoviesList","movies","movieName","pathname","useLocation","map","id","title","to","state","from","Form","Button","SearchBar","query","onChange","onSubmit","action","type","name","value","target","Message","Movies","useState","setQuery","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","getMovies","getFindMovies","results","message","e","preventDefault","length","KEY","SRCKEY","getPopularList","axios","data","getMovieDetails","getCast","getReviews"],"sourceRoot":""}