{"version":3,"file":"static/js/456.237da4c2.chunk.js","mappings":"gMAEaA,E,QAAYC,EAAAA,IAAH,sF,SCCTC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CAAWG,MAAM,UAAUC,OAAQ,GAAIC,MAAO,S,mKCFvCC,GAAOL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,qIAEFO,EAAAA,EAAAA,UAAAA,Q,mBCFFC,EAAO,WAClB,MCF+B,WAC/B,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAgB,mCAAG,gHAEKC,EAAAA,EAAAA,MAFL,gBAEbC,EAFa,EAEbA,QACRR,EAAaQ,GAHQ,gDAKrBJ,EAAS,EAAD,IALa,yBAOrBF,GAAa,GAPQ,4EAAH,qDAWtBI,MACC,IAEI,CAAEP,UAAAA,EAAWE,UAAAA,EAAWE,MAAAA,GDnBSM,GAAhCV,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,UAAWE,EAA9B,EAA8BA,MAE9B,OACE,6BACE,4CACCF,IAAa,SAACX,EAAA,EAAD,IACba,IAAS,uBAAI,mEACd,wBACGJ,EAAUW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACb,yBACE,SAAClB,EAAD,CAAMmB,GAAE,kBAAaF,GAArB,SAA4BC,KADrBD,a,kOEbbG,EAAM,mCACNC,EAAS,kCAETR,EAAc,mCAAG,sGACES,GAAAA,CAAM,sDAAD,OAC4BF,EAD5B,oBADP,uBACbG,EADa,EACbA,KADa,kBAKdA,GALc,2CAAH,qDAQdC,EAAe,mCAAG,WAAMP,GAAN,yFACCK,GAAAA,CAAM,sCAAD,OACYL,EADZ,oBAC0BG,EAD1B,oBADN,uBACdG,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,sDAOfE,EAAO,mCAAG,WAAMR,GAAN,yFACSK,GAAAA,CAAM,sCAAD,OACYL,EADZ,4BACkCG,EADlC,oBADd,uBACNG,EADM,EACNA,KADM,kBAIPA,GAJO,2CAAH,sDAOPG,EAAU,mCAAG,WAAMT,GAAN,yFACMK,GAAAA,CAAM,sCAAD,OACYL,EADZ,4BACkCG,EADlC,oBADX,uBACTG,EADS,EACTA,KADS,kBAIVA,GAJU,2CAAH,sDAOVI,EAAa,mCAAG,WAAMC,GAAN,yFACGN,GAAAA,CAAM,qDAAD,OAC2BF,EAD3B,kBACwCQ,EADxC,+CADR,uBACZL,EADY,EACZA,KADY,kBAIbA,GAJa,2CAAH","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","hooks/useFetchPopMovies.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderBox>\n      <ThreeDots color=\"#00BFFF\" height={80} width={80} />\n    </LoaderBox>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { theme } from '../../styles';\n\nexport const Link = styled(NavLink)`\n  color: black;\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { useFetchPopMovies } from '../../hooks/useFetchPopMovies';\nimport { Link } from './Home.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Home = () => {\n  const { popMovies, isLoading, error } = useFetchPopMovies();\n\n  return (\n    <main>\n      <h2>Tranding today:</h2>\n      {isLoading && <Loader />}\n      {error && <p>{'Server is not available ðŸ˜•. Please, try again later'}</p>}\n      <ul>\n        {popMovies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`}>{title}</Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getPopularList } from 'services/API';\n\nexport const useFetchPopMovies = () => {\n  const [popMovies, setPopMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getPopularMovies = async () => {\n      try {\n        const { results } = await getPopularList();\n        setPopMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getPopularMovies();\n  }, []);\n\n  return { popMovies, isLoading, error };\n};\n","import axios from 'axios';\nconst KEY = '18ae920eccc30023e44661ce76c3e71c';\nconst SRCKEY = 'https://image.tmdb.org/t/p/w500';\n\nconst getPopularList = async () => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/popular?api_key=${KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nconst getMovieDetails = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getCast = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getReviews = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getFindMovies = async query => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport {\n  SRCKEY,\n  getPopularList,\n  getMovieDetails,\n  getCast,\n  getReviews,\n  getFindMovies,\n};\n"],"names":["LoaderBox","styled","Loader","color","height","width","Link","NavLink","theme","Home","useState","popMovies","setPopMovies","isLoading","setIsLoading","error","setError","useEffect","getPopularMovies","getPopularList","results","useFetchPopMovies","map","id","title","to","KEY","SRCKEY","axios","data","getMovieDetails","getCast","getReviews","getFindMovies","query"],"sourceRoot":""}