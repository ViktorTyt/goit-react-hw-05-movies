{"version":3,"file":"static/js/244.def877f7.chunk.js","mappings":"gMAEaA,E,QAAYC,EAAAA,IAAH,sF,SCCTC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CAAWG,MAAM,UAAUC,OAAQ,GAAIC,MAAO,S,uLCHvCC,EAAUL,EAAAA,EAAAA,GAAH,iDAGPM,EAAON,EAAAA,EAAAA,GAAH,sKACJO,EAAAA,EAAAA,QAAc,GACXA,EAAAA,EAAAA,QAAAA,QACMA,EAAAA,EAAAA,OAAAA,MAQTC,EAAQR,EAAAA,EAAAA,EAAH,+EACHO,EAAAA,EAAAA,UAAAA,OACJA,EAAAA,EAAAA,OAAAA,MAIEE,EAAUT,EAAAA,EAAAA,EAAH,iEAELO,EAAAA,EAAAA,UAAAA,Q,SCnBFG,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6FACrBJ,GAAa,GADQ,mBAGOK,EAAAA,EAAAA,IAAWJ,GAHlB,gBAGXK,EAHW,EAGXA,QACRV,EAAWU,GAJQ,gDAMnBR,EAAS,KAAMS,SANI,yBAQnBP,GAAa,GARM,4EAAH,qDAYpBI,MACC,CAACH,KAGF,UAACb,EAAD,WACGS,IACC,SAACL,EAAD,UACG,2EAIJO,IAAa,SAACf,EAAA,EAAD,IAEbW,EAAQa,OAAS,GAChBb,EAAQc,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACV,UAACvB,EAAD,YACE,UAACE,EAAD,sBAAgBoB,MAChB,uBAAIC,MAFKF,EAAQ,OAMrBX,GAAgC,IAAnBJ,EAAQa,SAAiBX,IACtC,SAACL,EAAD,UAAU,kD,kOC9CZqB,EAAM,mCACNC,EAAS,kCAETC,EAAc,mCAAG,sGACEC,GAAAA,CAAM,sDAAD,OAC4BH,EAD5B,oBADP,uBACbI,EADa,EACbA,KADa,kBAKdA,GALc,2CAAH,qDAQdC,EAAe,mCAAG,WAAMC,GAAN,yFACCH,GAAAA,CAAM,sCAAD,OACYG,EADZ,oBAC0BN,EAD1B,oBADN,uBACdI,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,sDAOfG,EAAO,mCAAG,WAAMD,GAAN,yFACSH,GAAAA,CAAM,sCAAD,OACYG,EADZ,4BACkCN,EADlC,oBADd,uBACNI,EADM,EACNA,KADM,kBAIPA,GAJO,2CAAH,sDAOPZ,EAAU,mCAAG,WAAMc,GAAN,yFACMH,GAAAA,CAAM,sCAAD,OACYG,EADZ,4BACkCN,EADlC,oBADX,uBACTI,EADS,EACTA,KADS,kBAIVA,GAJU,2CAAH,sDAOVI,EAAa,mCAAG,WAAMC,GAAN,yFACGN,GAAAA,CAAM,qDAAD,OAC2BH,EAD3B,kBACwCS,EADxC,+CADR,uBACZL,EADY,EACZA,KADY,kBAIbA,GAJa,2CAAH","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderBox>\n      <ThreeDots color=\"#00BFFF\" height={80} width={80} />\n    </LoaderBox>\n  );\n};\n","import styled from '@emotion/styled';\nimport { theme } from '../../styles';\n\nexport const Wrapper = styled.ul`\n  padding-bottom: 12px;\n`;\nexport const Item = styled.li`\n  padding: ${theme.spacing(3)};\n  box-shadow: ${theme.shadows.regular};\n  background-color: ${theme.colors.sand};\n  border-radius: 4px;\n\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: ${theme.fontSizes.medium};\n  color: ${theme.colors.dark};\n  font-weight: bold;\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n  font-size: ${theme.fontSizes.medium};\n`;\n","import { getReviews } from '../../services/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\nimport { Wrapper, Item, Title, Message } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviewsList = async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await getReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getReviewsList();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      {error && (\n        <Message>\n          {'List of reviews is not available ðŸ˜•. Please, try again later'}\n        </Message>\n      )}\n\n      {isLoading && <Loader />}\n\n      {reviews.length > 0 &&\n        reviews.map(({ author, content }, index) => (\n          <Item key={index + 1}>\n            <Title>Author: {author}</Title>\n            <p>{content}</p>\n          </Item>\n        ))}\n\n      {!isLoading && reviews.length === 0 && !error && (\n        <Message>{'We don`t have any reviews for this movie'}</Message>\n      )}\n    </Wrapper>\n  );\n};\n","import axios from 'axios';\nconst KEY = '18ae920eccc30023e44661ce76c3e71c';\nconst SRCKEY = 'https://image.tmdb.org/t/p/w500';\n\nconst getPopularList = async () => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/popular?api_key=${KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nconst getMovieDetails = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getCast = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getReviews = async id => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getFindMovies = async query => {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport {\n  SRCKEY,\n  getPopularList,\n  getMovieDetails,\n  getCast,\n  getReviews,\n  getFindMovies,\n};\n"],"names":["LoaderBox","styled","Loader","color","height","width","Wrapper","Item","theme","Title","Message","Reviews","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","getReviewsList","getReviews","results","message","length","map","index","author","content","KEY","SRCKEY","getPopularList","axios","data","getMovieDetails","id","getCast","getFindMovies","query"],"sourceRoot":""}